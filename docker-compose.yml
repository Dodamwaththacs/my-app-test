version: 3'
services:
  mysql-hp:
    container_name: mysql-hp
    image: mysql
    volumes:
        - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/1.sql
        - mysql_data:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=my-app-test
      - MYSQL_ROOT_PASSWORD=P4ssword!
    ports:
      - 33306:3306
  keycloak-hp:
      container_name: keycloak-hp
      image: quay.io/keycloak/keycloak:22.0.1
      command:
        - "start-dev"
        - "--hostname-port=8080"
      ports:
        - "8080:8080"
        #- "18443:8443"
      environment:
        KEYCLOAK_ADMIN: admin
        KEYCLOAK_ADMIN_PASSWORD: password
        KC_HOSTNAME: keycloak-hp
        KC_DB: mysql
        KC_DB_URL_HOST: mysql-hp
        KC_DB_URL_DATABASE: keycloak
        KC_DB_USERNAME: root
        KC_DB_PASSWORD: P4ssword!
        KC_HEALTH_ENABLED: true
        KC_METRICS_ENABLED: true
      depends_on:
        - mysql-hp

  prometheus:
    image: prom/prometheus
    extra_hosts: ['host.docker.internal:host-gateway']
    command:
        - --enable-feature=exemplar-storage
        - --config.file=/etc/prometheus/prometheus.yml
    volumes:
        - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
        - ./docker/prometheus/rule.yml:/etc/prometheus/rule.yml:ro
        - token_volume:/app/tokens
    ports:
        - "9090:9090"
    depends_on:
        - token_retrieval
        - mysql-hp-exporter
        - keycloak-hp
    
  node-exporter:
    image: prom/node-exporter
    ports:
      - 9100:9100
  alert-manager:
    image: prom/alertmanager
    volumes:
      - "./docker/alertmanager/alertmanager.yml:/alertmanager/alertmanager.yml"
    ports:
      - 9093:9093

  tempo:
    image: grafana/tempo
    extra_hosts: ['host.docker.internal:host-gateway']
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
        - ./docker/tempo/tempo-local.yaml:/etc/tempo.yaml:ro
        - tempo_data:/tmp/tempo
    ports:
        - "14268"  # jaeger ingest
        - "9411:9411" # zipkin   
  loki:
    image: grafana/loki
    extra_hosts: ['host.docker.internal:host-gateway']
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
        - "3100:3100"                                   # loki needs to be exposed so it receives logs
    environment:
        - JAEGER_AGENT_HOST=tempo
        - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
        - JAEGER_SAMPLER_TYPE=const
        - JAEGER_SAMPLER_PARAM=1
  grafana:
    image: grafana/grafana
    extra_hosts: ['host.docker.internal:host-gateway']
    volumes:
        - ./docker/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
        - ./docker/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    environment:
        - GF_AUTH_ANONYMOUS_ENABLED=true
        - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
        - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
        - "3001:3000"

  token_retrieval:
    build:
      context: .
      dockerfile: Dockerfile_token_retrieval
    volumes:
      - ./token_retrieval_script.py:/app/token_retrieval_script.py
      - token_volume:/app/tokens
    depends_on:
      - keycloak-hp

  mysql-hp-exporter:
    container_name: mysql-hp-exporter
    image: quay.io/prometheus/mysqld-exporter
    command:
     - "--mysqld.username=root:P4ssword!"
     - "--mysqld.address=mysql-hp:3306"
    #environment:
    #  DATA_SOURCE_NAME: "root:P4ssword!@(mysql-hp:3306)/" # Adjust credentials and MySQL host/port
    ports:
      - '9104:9104'
    depends_on:
      - mysql-hp

#  ganache:
#    image: trufflesuite/ganache-cli:latest
#    ports:
#      - "8545:8545"
#
#  ipfs:
#    image: ipfs/go-ipfs:latest
#    restart: always
#    ports:
#      - "4001:4001"
#      - "5001:5001"
#      - "8081:8080"
#    volumes:
#      - ipfs-data:/data/ipfs

  storage_node:
    image: ethereum/client-go:latest
    environment:
      - ETH_RPC_URL=http://ganache:8545
      - IPFS_API_URL=http://ipfs:5001
    depends_on:
      - ganache
      - ipfs
    networks:
      - my_network


  my-app-test-1:
    container_name: my-app-test-1
    build:
      dockerfile: Dockerfile
    image: my-app-test:latest
    ports:
        - "21001"
    depends_on:
        - mysql-hp
        - keycloak-hp
        - prometheus
        - node-exporter
        - alert-manager
        - tempo
        - token_retrieval

  my-app-test-2:
    container_name: my-app-test-2
    build:
      dockerfile: Dockerfile
    image: my-app-test:latest
    ports:
        - "21002"
    depends_on:
        - mysql-hp
        - keycloak-hp
        - prometheus
        - node-exporter
        - alert-manager
        - tempo
        - token_retrieval

#    my-app-test-2:
#      container_name: my-app-test-2
#      build:
#        dockerfile: Dockerfile
#      image: my-app-test:latest
#      ports:
#        - "21002:21001"
#      depends_on:
#        - mysql-hp
#        - keycloak-hp
#        - prometheus
#        - node-exporter
#        - alert-manager
#        - tempo
#        - token_retrieval
  
  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile_nginx
    ports:
      - "10000:10000"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - my-app-test-1

  nginx-prometheus-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    restart: unless-stopped
    command:
      - '-nginx.scrape-uri'
      - 'http://nginx:10000/stub_status'  # Adjusted to match Nginx's listen port
    ports:
      - "9113:9113"
    depends_on:
      - nginx


volumes:
    mysql_data:
      driver: local
    grafana_data:
      driver: local
    promtail_data:
      driver: local
    tempo_data:
      driver: local
    token_volume:
      driver: local


networks:
  my_network:
    driver: bridge

#this is a test